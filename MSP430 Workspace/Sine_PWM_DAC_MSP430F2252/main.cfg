/**
 *  @fileOverview Grace
 */

/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var Timer_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer_A3');
CSL.configApiVersion = "1.00.00";

/* these modules should be part of every project */
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var System = xdc.useModule('ti.mcu.msp430.csl.system.System');

/* set stack and heap sizes as appropriate for MSP430 */
Program.sysStack = 0;
Program.stack = 64;
Program.heap = 0;
Program.argSize = 0;

/* Enable global interrupt */
System.srRegs.SR.GIE = System.srDefs.GIE;
GPIO.regs.P2DIR.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P2DIR.Bit7 = GPIO.defs.BIT7_OFF;
GPIO.regs.P2SEL.Bit7 = GPIO.defs.BIT7_OFF;
GPIO.regs.P2DIR.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P2SEL.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P2DIR.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P2DIR.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P2DIR.Bit2 = GPIO.defs.BIT2_OFF;
GPIO.regs.P3DIR.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P2DIR.Bit4 = GPIO.defs.BIT4_OFF;
GPIO.regs.P2DIR.Bit3 = GPIO.defs.BIT3_OFF;
CSL.device.vcc = 3.6;
GPIO.regs.P1DIR.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P1DIR.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P1DIR.Bit7 = GPIO.defs.BIT7_OFF;
GPIO.regs.P1DIR.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P1DIR.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P1DIR.Bit4 = GPIO.defs.BIT4_OFF;
GPIO.regs.P1DIR.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P1DIR.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P2SEL.Bit2 = GPIO.defs.BIT2_OFF;
GPIO.regs.P2SEL.Bit3 = GPIO.defs.BIT3_OFF;
GPIO.regs.P1SEL.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1SEL.Bit3 = GPIO.defs.BIT3;
Timer_A3.ccr0TimerSelection_BasicView = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_BasicView_Selection_0;
Timer_A3.ccr0TimerSelection_PowerUser = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_PowerUser_Selection_0;
Timer_A3.ccInputPin[0] = 0;
Timer_A3.regs.TACTL.MC = Timer_A3.defs.MC_1;
Timer_A3.regs.TACCR0 = 64;
Timer_A3.regs.TACTL.TASSEL = Timer_A3.defs.TASSEL_2;
Timer_A3.inputClockToTimer = 1000.0;
Timer_A3.ccrXTimerSelection_BasicView[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_2;
Timer_A3.ccrXTimerSelection_BasicView[2] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_2;
Timer_A3.ccrOutputPin[0] = 0;
Timer_A3.regs.TACCTL1.OUTMOD = Timer_A3.defs.OUTMOD_7;
Timer_A3.regs.TACCTL2.OUTMOD = Timer_A3.defs.OUTMOD_7;
Timer_A3.regs.TACCR1 = 0;
Timer_A3.regs.TACTL.ID = Timer_A3.defs.ID_0;
Timer_A3.txClkPin[0] = 0;
Timer_A3.inClkPin[0] = 0;
